MODULE main
VAR
    keeper_x : 1..3;
    keeper_y : 1..5;
    wall : array 1..3 of array 1..5 of boolean;
    goal : array 1..3 of array 1..5 of boolean;
    box_positions : array 1..1 of array 1..3 of array 1..5 of boolean;
ASSIGN
    init(keeper_x) := 2;
    init(keeper_y) := 2;
    init(wall[1][1]) := TRUE;
    init(wall[1][2]) := TRUE;
    init(wall[1][3]) := TRUE;
    init(wall[1][4]) := TRUE;
    init(wall[1][5]) := TRUE;
    init(wall[2][1]) := TRUE;
    init(wall[2][2]) := FALSE;
    init(wall[2][3]) := FALSE;
    init(wall[2][4]) := FALSE;
    init(wall[2][5]) := TRUE;
    init(wall[3][1]) := TRUE;
    init(wall[3][2]) := TRUE;
    init(wall[3][3]) := TRUE;
    init(wall[3][4]) := TRUE;
    init(wall[3][5]) := TRUE;
    init(goal[1][1]) := FALSE;
    init(goal[1][2]) := FALSE;
    init(goal[1][3]) := FALSE;
    init(goal[1][4]) := FALSE;
    init(goal[1][5]) := FALSE;
    init(goal[2][1]) := FALSE;
    init(goal[2][2]) := FALSE;
    init(goal[2][3]) := FALSE;
    init(goal[2][4]) := TRUE;
    init(goal[2][5]) := FALSE;
    init(goal[3][1]) := FALSE;
    init(goal[3][2]) := FALSE;
    init(goal[3][3]) := FALSE;
    init(goal[3][4]) := FALSE;
    init(goal[3][5]) := FALSE;
    init(box_positions[1][1][1]) := FALSE;
    init(box_positions[1][1][2]) := FALSE;
    init(box_positions[1][1][3]) := FALSE;
    init(box_positions[1][1][4]) := FALSE;
    init(box_positions[1][1][5]) := FALSE;
    init(box_positions[1][2][1]) := FALSE;
    init(box_positions[1][2][2]) := FALSE;
    init(box_positions[1][2][3]) := TRUE;
    init(box_positions[1][2][4]) := FALSE;
    init(box_positions[1][2][5]) := FALSE;
    init(box_positions[1][3][1]) := FALSE;
    init(box_positions[1][3][2]) := FALSE;
    init(box_positions[1][3][3]) := FALSE;
    init(box_positions[1][3][4]) := FALSE;
    init(box_positions[1][3][5]) := FALSE;
TRANS
    case

    -- ** Keeper movements without boxes **
    -- Keeper moves left
    keeper_x > 1 & !wall[keeper_x - 1][keeper_y] & 
    !box_positions[1][keeper_x - 1][keeper_y] : 
        next(keeper_x) = keeper_x - 1 &
        next(keeper_y) = keeper_y &
    next(wall[1][1]) = wall[1][1] & next(wall[1][2]) = wall[1][2] & next(wall[1][3]) = wall[1][3] & next(wall[1][4]) = wall[1][4] & next(wall[1][5]) = wall[1][5] & next(wall[2][1]) = wall[2][1] & next(wall[2][2]) = wall[2][2] & next(wall[2][3]) = wall[2][3] & next(wall[2][4]) = wall[2][4] & next(wall[2][5]) = wall[2][5] & next(wall[3][1]) = wall[3][1] & next(wall[3][2]) = wall[3][2] & next(wall[3][3]) = wall[3][3] & next(wall[3][4]) = wall[3][4] & next(wall[3][5]) = wall[3][5] &
    next(goal[1][1]) = goal[1][1] & next(goal[1][2]) = goal[1][2] & next(goal[1][3]) = goal[1][3] & next(goal[1][4]) = goal[1][4] & next(goal[1][5]) = goal[1][5] & next(goal[2][1]) = goal[2][1] & next(goal[2][2]) = goal[2][2] & next(goal[2][3]) = goal[2][3] & next(goal[2][4]) = goal[2][4] & next(goal[2][5]) = goal[2][5] & next(goal[3][1]) = goal[3][1] & next(goal[3][2]) = goal[3][2] & next(goal[3][3]) = goal[3][3] & next(goal[3][4]) = goal[3][4] & next(goal[3][5]) = goal[3][5] &
    next(box_positions[1][1][1]) = box_positions[1][1][1] & next(box_positions[1][1][2]) = box_positions[1][1][2] & next(box_positions[1][1][3]) = box_positions[1][1][3] & next(box_positions[1][1][4]) = box_positions[1][1][4] & next(box_positions[1][2][1]) = box_positions[1][2][1] & next(box_positions[1][2][2]) = box_positions[1][2][2] & next(box_positions[1][2][3]) = box_positions[1][2][3] & next(box_positions[1][2][4]) = box_positions[1][2][4];

    -- Keeper moves right
    keeper_x < 4 & !wall[keeper_x + 1][keeper_y] & 
    !box_positions[1][keeper_x + 1][keeper_y] : 
        next(keeper_x) = keeper_x + 1 &
        next(keeper_y) = keeper_y &
        next(wall[1][1]) = wall[1][1] & next(wall[1][2]) = wall[1][2] & next(wall[1][3]) = wall[1][3] & next(wall[1][4]) = wall[1][4] & next(wall[1][5]) = wall[1][5] & next(wall[2][1]) = wall[2][1] & next(wall[2][2]) = wall[2][2] & next(wall[2][3]) = wall[2][3] & next(wall[2][4]) = wall[2][4] & next(wall[2][5]) = wall[2][5] & next(wall[3][1]) = wall[3][1] & next(wall[3][2]) = wall[3][2] & next(wall[3][3]) = wall[3][3] & next(wall[3][4]) = wall[3][4] & next(wall[3][5]) = wall[3][5] &
        next(goal[1][1]) = goal[1][1] & next(goal[1][2]) = goal[1][2] & next(goal[1][3]) = goal[1][3] & next(goal[1][4]) = goal[1][4] & next(goal[1][5]) = goal[1][5] & next(goal[2][1]) = goal[2][1] & next(goal[2][2]) = goal[2][2] & next(goal[2][3]) = goal[2][3] & next(goal[2][4]) = goal[2][4] & next(goal[2][5]) = goal[2][5] & next(goal[3][1]) = goal[3][1] & next(goal[3][2]) = goal[3][2] & next(goal[3][3]) = goal[3][3] & next(goal[3][4]) = goal[3][4] & next(goal[3][5]) = goal[3][5] &
        next(box_positions[1][1][1]) = box_positions[1][1][1] & next(box_positions[1][1][2]) = box_positions[1][1][2] & next(box_positions[1][1][3]) = box_positions[1][1][3] & next(box_positions[1][1][4]) = box_positions[1][1][4] & next(box_positions[1][2][1]) = box_positions[1][2][1] & next(box_positions[1][2][2]) = box_positions[1][2][2] & next(box_positions[1][2][3]) = box_positions[1][2][3] & next(box_positions[1][2][4]) = box_positions[1][2][4];

    -- Keeper moves up
    keeper_y > 1 & !wall[keeper_x][keeper_y - 1] & 
    !box_positions[1][keeper_x][keeper_y - 1] : 
        next(keeper_x) = keeper_x &
        next(keeper_y) = keeper_y - 1 &
        next(wall[1][1]) = wall[1][1] & next(wall[1][2]) = wall[1][2] & next(wall[1][3]) = wall[1][3] & next(wall[1][4]) = wall[1][4] & next(wall[1][5]) = wall[1][5] & next(wall[2][1]) = wall[2][1] & next(wall[2][2]) = wall[2][2] & next(wall[2][3]) = wall[2][3] & next(wall[2][4]) = wall[2][4] & next(wall[2][5]) = wall[2][5] & next(wall[3][1]) = wall[3][1] & next(wall[3][2]) = wall[3][2] & next(wall[3][3]) = wall[3][3] & next(wall[3][4]) = wall[3][4] & next(wall[3][5]) = wall[3][5] &
        next(goal[1][1]) = goal[1][1] & next(goal[1][2]) = goal[1][2] & next(goal[1][3]) = goal[1][3] & next(goal[1][4]) = goal[1][4] & next(goal[1][5]) = goal[1][5] & next(goal[2][1]) = goal[2][1] & next(goal[2][2]) = goal[2][2] & next(goal[2][3]) = goal[2][3] & next(goal[2][4]) = goal[2][4] & next(goal[2][5]) = goal[2][5] & next(goal[3][1]) = goal[3][1] & next(goal[3][2]) = goal[3][2] & next(goal[3][3]) = goal[3][3] & next(goal[3][4]) = goal[3][4] & next(goal[3][5]) = goal[3][5] &
        next(box_positions[1][1][1]) = box_positions[1][1][1] & next(box_positions[1][1][2]) = box_positions[1][1][2] & next(box_positions[1][1][3]) = box_positions[1][1][3] & next(box_positions[1][1][4]) = box_positions[1][1][4] & next(box_positions[1][2][1]) = box_positions[1][2][1] & next(box_positions[1][2][2]) = box_positions[1][2][2] & next(box_positions[1][2][3]) = box_positions[1][2][3] & next(box_positions[1][2][4]) = box_positions[1][2][4];

    -- Keeper moves down
    keeper_y < 6 & !wall[keeper_x][keeper_y + 1] & 
    !box_positions[1][keeper_x][keeper_y + 1] : 
        next(keeper_x) = keeper_x &
        next(keeper_y) = keeper_y + 1 &
        next(wall[1][1]) = wall[1][1] & next(wall[1][2]) = wall[1][2] & next(wall[1][3]) = wall[1][3] & next(wall[1][4]) = wall[1][4] & next(wall[1][5]) = wall[1][5] & next(wall[2][1]) = wall[2][1] & next(wall[2][2]) = wall[2][2] & next(wall[2][3]) = wall[2][3] & next(wall[2][4]) = wall[2][4] & next(wall[2][5]) = wall[2][5] & next(wall[3][1]) = wall[3][1] & next(wall[3][2]) = wall[3][2] & next(wall[3][3]) = wall[3][3] & next(wall[3][4]) = wall[3][4] & next(wall[3][5]) = wall[3][5] &
        next(goal[1][1]) = goal[1][1] & next(goal[1][2]) = goal[1][2] & next(goal[1][3]) = goal[1][3] & next(goal[1][4]) = goal[1][4] & next(goal[1][5]) = goal[1][5] & next(goal[2][1]) = goal[2][1] & next(goal[2][2]) = goal[2][2] & next(goal[2][3]) = goal[2][3] & next(goal[2][4]) = goal[2][4] & next(goal[2][5]) = goal[2][5] & next(goal[3][1]) = goal[3][1] & next(goal[3][2]) = goal[3][2] & next(goal[3][3]) = goal[3][3] & next(goal[3][4]) = goal[3][4] & next(goal[3][5]) = goal[3][5] &
        next(box_positions[1][1][1]) = box_positions[1][1][1] & next(box_positions[1][1][2]) = box_positions[1][1][2] & next(box_positions[1][1][3]) = box_positions[1][1][3] & next(box_positions[1][1][4]) = box_positions[1][1][4] & next(box_positions[1][2][1]) = box_positions[1][2][1] & next(box_positions[1][2][2]) = box_positions[1][2][2] & next(box_positions[1][2][3]) = box_positions[1][2][3] & next(box_positions[1][2][4]) = box_positions[1][2][4];
    


    -- ** Handling box movements when keeper pushes box[1] right from position (1,1)**
    keeper_x = 1 & !wall[2][1] & !wall[3][1] & 
    box_positions[1][2][1] & !goal[2][1]  
     : 
        next(box_positions[1][2][1]) = FALSE &
        next(box_positions[1][3][1]) = TRUE &
        next(keeper_x) = 2 &
        next(keeper_y) = 1 &
        next(wall[1][1]) = wall[1][1] & next(wall[1][2]) = wall[1][2] & next(wall[1][3]) = wall[1][3] & next(wall[1][4]) = wall[1][4] & next(wall[1][5]) = wall[1][5] & next(wall[2][1]) = wall[2][1] & next(wall[2][2]) = wall[2][2] & next(wall[2][3]) = wall[2][3] & next(wall[2][4]) = wall[2][4] & next(wall[2][5]) = wall[2][5] & next(wall[3][1]) = wall[3][1] & next(wall[3][2]) = wall[3][2] & next(wall[3][3]) = wall[3][3] & next(wall[3][4]) = wall[3][4] & next(wall[3][5]) = wall[3][5] &
        next(goal[1][1]) = goal[1][1] & next(goal[1][2]) = goal[1][2] & next(goal[1][3]) = goal[1][3] & next(goal[1][4]) = goal[1][4] & next(goal[1][5]) = goal[1][5] & next(goal[2][1]) = goal[2][1] & next(goal[2][2]) = goal[2][2] & next(goal[2][3]) = goal[2][3] & next(goal[2][4]) = goal[2][4] & next(goal[2][5]) = goal[2][5] & next(goal[3][1]) = goal[3][1] & next(goal[3][2]) = goal[3][2] & next(goal[3][3]) = goal[3][3] & next(goal[3][4]) = goal[3][4] & next(goal[3][5]) = goal[3][5] &
        next(box_positions[1][1][1]) = box_positions[1][1][1] & next(box_positions[1][1][2]) = box_positions[1][1][2] & next(box_positions[1][1][3]) = box_positions[1][1][3] & next(box_positions[1][1][4]) = box_positions[1][1][4] & next(box_positions[1][1][5]) = box_positions[1][1][5] & next(box_positions[1][2][2]) = box_positions[1][2][2] & next(box_positions[1][2][3]) = box_positions[1][2][3] & next(box_positions[1][2][4]) = box_positions[1][2][4] & next(box_positions[1][2][5]) = box_positions[1][2][5] & next(box_positions[1][3][2]) = box_positions[1][3][2] & next(box_positions[1][3][3]) = box_positions[1][3][3] & next(box_positions[1][3][4]) = box_positions[1][3][4] & next(box_positions[1][3][5]) = box_positions[1][3][5];
        

    -- ** Handling box movements when keeper pushes box[1] right from position (1,2)**
    keeper_x = 1 & !wall[2][2] & !wall[3][2] & 
    box_positions[1][2][2] & !goal[2][2]  
     : 
        next(box_positions[1][2][2]) = FALSE &
        next(box_positions[1][3][2]) = TRUE &
        next(keeper_x) = 2 &
        next(keeper_y) = 2 &
        next(wall[1][1]) = wall[1][1] & next(wall[1][2]) = wall[1][2] & next(wall[1][3]) = wall[1][3] & next(wall[1][4]) = wall[1][4] & next(wall[1][5]) = wall[1][5] & next(wall[2][1]) = wall[2][1] & next(wall[2][2]) = wall[2][2] & next(wall[2][3]) = wall[2][3] & next(wall[2][4]) = wall[2][4] & next(wall[2][5]) = wall[2][5] & next(wall[3][1]) = wall[3][1] & next(wall[3][2]) = wall[3][2] & next(wall[3][3]) = wall[3][3] & next(wall[3][4]) = wall[3][4] & next(wall[3][5]) = wall[3][5] &
        next(goal[1][1]) = goal[1][1] & next(goal[1][2]) = goal[1][2] & next(goal[1][3]) = goal[1][3] & next(goal[1][4]) = goal[1][4] & next(goal[1][5]) = goal[1][5] & next(goal[2][1]) = goal[2][1] & next(goal[2][2]) = goal[2][2] & next(goal[2][3]) = goal[2][3] & next(goal[2][4]) = goal[2][4] & next(goal[2][5]) = goal[2][5] & next(goal[3][1]) = goal[3][1] & next(goal[3][2]) = goal[3][2] & next(goal[3][3]) = goal[3][3] & next(goal[3][4]) = goal[3][4] & next(goal[3][5]) = goal[3][5] &
        next(box_positions[1][1][1]) = box_positions[1][1][1] & next(box_positions[1][1][2]) = box_positions[1][1][2] & next(box_positions[1][1][3]) = box_positions[1][1][3] & next(box_positions[1][1][4]) = box_positions[1][1][4] & next(box_positions[1][1][5]) = box_positions[1][1][5] & next(box_positions[1][2][1]) = box_positions[1][2][1] & next(box_positions[1][2][3]) = box_positions[1][2][3] & next(box_positions[1][2][4]) = box_positions[1][2][4] & next(box_positions[1][2][5]) = box_positions[1][2][5] & next(box_positions[1][3][1]) = box_positions[1][3][1] & next(box_positions[1][3][3]) = box_positions[1][3][3] & next(box_positions[1][3][4]) = box_positions[1][3][4] & next(box_positions[1][3][5]) = box_positions[1][3][5];
        

    -- ** Handling box movements when keeper pushes box[1] right from position (1,3)**
    keeper_x = 1 & !wall[2][3] & !wall[3][3] & 
    box_positions[1][2][3] & !goal[2][3]  
     : 
        next(box_positions[1][2][3]) = FALSE &
        next(box_positions[1][3][3]) = TRUE &
        next(keeper_x) = 2 &
        next(keeper_y) = 3 &
        next(wall[1][1]) = wall[1][1] & next(wall[1][2]) = wall[1][2] & next(wall[1][3]) = wall[1][3] & next(wall[1][4]) = wall[1][4] & next(wall[1][5]) = wall[1][5] & next(wall[2][1]) = wall[2][1] & next(wall[2][2]) = wall[2][2] & next(wall[2][3]) = wall[2][3] & next(wall[2][4]) = wall[2][4] & next(wall[2][5]) = wall[2][5] & next(wall[3][1]) = wall[3][1] & next(wall[3][2]) = wall[3][2] & next(wall[3][3]) = wall[3][3] & next(wall[3][4]) = wall[3][4] & next(wall[3][5]) = wall[3][5] &
        next(goal[1][1]) = goal[1][1] & next(goal[1][2]) = goal[1][2] & next(goal[1][3]) = goal[1][3] & next(goal[1][4]) = goal[1][4] & next(goal[1][5]) = goal[1][5] & next(goal[2][1]) = goal[2][1] & next(goal[2][2]) = goal[2][2] & next(goal[2][3]) = goal[2][3] & next(goal[2][4]) = goal[2][4] & next(goal[2][5]) = goal[2][5] & next(goal[3][1]) = goal[3][1] & next(goal[3][2]) = goal[3][2] & next(goal[3][3]) = goal[3][3] & next(goal[3][4]) = goal[3][4] & next(goal[3][5]) = goal[3][5] &
        next(box_positions[1][1][1]) = box_positions[1][1][1] & next(box_positions[1][1][2]) = box_positions[1][1][2] & next(box_positions[1][1][3]) = box_positions[1][1][3] & next(box_positions[1][1][4]) = box_positions[1][1][4] & next(box_positions[1][1][5]) = box_positions[1][1][5] & next(box_positions[1][2][1]) = box_positions[1][2][1] & next(box_positions[1][2][2]) = box_positions[1][2][2] & next(box_positions[1][2][4]) = box_positions[1][2][4] & next(box_positions[1][2][5]) = box_positions[1][2][5] & next(box_positions[1][3][1]) = box_positions[1][3][1] & next(box_positions[1][3][2]) = box_positions[1][3][2] & next(box_positions[1][3][4]) = box_positions[1][3][4] & next(box_positions[1][3][5]) = box_positions[1][3][5];
        

    -- ** Handling box movements when keeper pushes box[1] right from position (1,4)**
    keeper_x = 1 & !wall[2][4] & !wall[3][4] & 
    box_positions[1][2][4] & !goal[2][4]  
     : 
        next(box_positions[1][2][4]) = FALSE &
        next(box_positions[1][3][4]) = TRUE &
        next(keeper_x) = 2 &
        next(keeper_y) = 4 &
        next(wall[1][1]) = wall[1][1] & next(wall[1][2]) = wall[1][2] & next(wall[1][3]) = wall[1][3] & next(wall[1][4]) = wall[1][4] & next(wall[1][5]) = wall[1][5] & next(wall[2][1]) = wall[2][1] & next(wall[2][2]) = wall[2][2] & next(wall[2][3]) = wall[2][3] & next(wall[2][4]) = wall[2][4] & next(wall[2][5]) = wall[2][5] & next(wall[3][1]) = wall[3][1] & next(wall[3][2]) = wall[3][2] & next(wall[3][3]) = wall[3][3] & next(wall[3][4]) = wall[3][4] & next(wall[3][5]) = wall[3][5] &
        next(goal[1][1]) = goal[1][1] & next(goal[1][2]) = goal[1][2] & next(goal[1][3]) = goal[1][3] & next(goal[1][4]) = goal[1][4] & next(goal[1][5]) = goal[1][5] & next(goal[2][1]) = goal[2][1] & next(goal[2][2]) = goal[2][2] & next(goal[2][3]) = goal[2][3] & next(goal[2][4]) = goal[2][4] & next(goal[2][5]) = goal[2][5] & next(goal[3][1]) = goal[3][1] & next(goal[3][2]) = goal[3][2] & next(goal[3][3]) = goal[3][3] & next(goal[3][4]) = goal[3][4] & next(goal[3][5]) = goal[3][5] &
        next(box_positions[1][1][1]) = box_positions[1][1][1] & next(box_positions[1][1][2]) = box_positions[1][1][2] & next(box_positions[1][1][3]) = box_positions[1][1][3] & next(box_positions[1][1][4]) = box_positions[1][1][4] & next(box_positions[1][1][5]) = box_positions[1][1][5] & next(box_positions[1][2][1]) = box_positions[1][2][1] & next(box_positions[1][2][2]) = box_positions[1][2][2] & next(box_positions[1][2][3]) = box_positions[1][2][3] & next(box_positions[1][2][5]) = box_positions[1][2][5] & next(box_positions[1][3][1]) = box_positions[1][3][1] & next(box_positions[1][3][2]) = box_positions[1][3][2] & next(box_positions[1][3][3]) = box_positions[1][3][3] & next(box_positions[1][3][5]) = box_positions[1][3][5];
        

    -- ** Handling box movements when keeper pushes box[1] right from position (1,5)**
    keeper_x = 1 & !wall[2][5] & !wall[3][5] & 
    box_positions[1][2][5] & !goal[2][5]  
     : 
        next(box_positions[1][2][5]) = FALSE &
        next(box_positions[1][3][5]) = TRUE &
        next(keeper_x) = 2 &
        next(keeper_y) = 5 &
        next(wall[1][1]) = wall[1][1] & next(wall[1][2]) = wall[1][2] & next(wall[1][3]) = wall[1][3] & next(wall[1][4]) = wall[1][4] & next(wall[1][5]) = wall[1][5] & next(wall[2][1]) = wall[2][1] & next(wall[2][2]) = wall[2][2] & next(wall[2][3]) = wall[2][3] & next(wall[2][4]) = wall[2][4] & next(wall[2][5]) = wall[2][5] & next(wall[3][1]) = wall[3][1] & next(wall[3][2]) = wall[3][2] & next(wall[3][3]) = wall[3][3] & next(wall[3][4]) = wall[3][4] & next(wall[3][5]) = wall[3][5] &
        next(goal[1][1]) = goal[1][1] & next(goal[1][2]) = goal[1][2] & next(goal[1][3]) = goal[1][3] & next(goal[1][4]) = goal[1][4] & next(goal[1][5]) = goal[1][5] & next(goal[2][1]) = goal[2][1] & next(goal[2][2]) = goal[2][2] & next(goal[2][3]) = goal[2][3] & next(goal[2][4]) = goal[2][4] & next(goal[2][5]) = goal[2][5] & next(goal[3][1]) = goal[3][1] & next(goal[3][2]) = goal[3][2] & next(goal[3][3]) = goal[3][3] & next(goal[3][4]) = goal[3][4] & next(goal[3][5]) = goal[3][5] &
        next(box_positions[1][1][1]) = box_positions[1][1][1] & next(box_positions[1][1][2]) = box_positions[1][1][2] & next(box_positions[1][1][3]) = box_positions[1][1][3] & next(box_positions[1][1][4]) = box_positions[1][1][4] & next(box_positions[1][1][5]) = box_positions[1][1][5] & next(box_positions[1][2][1]) = box_positions[1][2][1] & next(box_positions[1][2][2]) = box_positions[1][2][2] & next(box_positions[1][2][3]) = box_positions[1][2][3] & next(box_positions[1][2][4]) = box_positions[1][2][4] & next(box_positions[1][3][1]) = box_positions[1][3][1] & next(box_positions[1][3][2]) = box_positions[1][3][2] & next(box_positions[1][3][3]) = box_positions[1][3][3] & next(box_positions[1][3][4]) = box_positions[1][3][4];
        

    -- ** Handling box movements when keeper pushes box[1] left from position (3,1)**
    keeper_x = 3 & !wall[2][1] & !wall[1][1] & 
    box_positions[1][2][1] & !goal[2][1]  
     : 
        next(box_positions[1][2][1]) = FALSE &
        next(box_positions[1][1][1]) = TRUE &
        next(keeper_x) = 2 &
        next(keeper_y) = 1 &
        next(wall[1][1]) = wall[1][1] & next(wall[1][2]) = wall[1][2] & next(wall[1][3]) = wall[1][3] & next(wall[1][4]) = wall[1][4] & next(wall[1][5]) = wall[1][5] & next(wall[2][1]) = wall[2][1] & next(wall[2][2]) = wall[2][2] & next(wall[2][3]) = wall[2][3] & next(wall[2][4]) = wall[2][4] & next(wall[2][5]) = wall[2][5] & next(wall[3][1]) = wall[3][1] & next(wall[3][2]) = wall[3][2] & next(wall[3][3]) = wall[3][3] & next(wall[3][4]) = wall[3][4] & next(wall[3][5]) = wall[3][5] &
        next(goal[1][1]) = goal[1][1] & next(goal[1][2]) = goal[1][2] & next(goal[1][3]) = goal[1][3] & next(goal[1][4]) = goal[1][4] & next(goal[1][5]) = goal[1][5] & next(goal[2][1]) = goal[2][1] & next(goal[2][2]) = goal[2][2] & next(goal[2][3]) = goal[2][3] & next(goal[2][4]) = goal[2][4] & next(goal[2][5]) = goal[2][5] & next(goal[3][1]) = goal[3][1] & next(goal[3][2]) = goal[3][2] & next(goal[3][3]) = goal[3][3] & next(goal[3][4]) = goal[3][4] & next(goal[3][5]) = goal[3][5] &
        next(box_positions[1][1][2]) = box_positions[1][1][2] & next(box_positions[1][1][3]) = box_positions[1][1][3] & next(box_positions[1][1][4]) = box_positions[1][1][4] & next(box_positions[1][1][5]) = box_positions[1][1][5] & next(box_positions[1][2][2]) = box_positions[1][2][2] & next(box_positions[1][2][3]) = box_positions[1][2][3] & next(box_positions[1][2][4]) = box_positions[1][2][4] & next(box_positions[1][2][5]) = box_positions[1][2][5] & next(box_positions[1][3][1]) = box_positions[1][3][1] & next(box_positions[1][3][2]) = box_positions[1][3][2] & next(box_positions[1][3][3]) = box_positions[1][3][3] & next(box_positions[1][3][4]) = box_positions[1][3][4] & next(box_positions[1][3][5]) = box_positions[1][3][5];
        

    -- ** Handling box movements when keeper pushes box[1] left from position (3,2)**
    keeper_x = 3 & !wall[2][2] & !wall[1][2] & 
    box_positions[1][2][2] & !goal[2][2]  
     : 
        next(box_positions[1][2][2]) = FALSE &
        next(box_positions[1][1][2]) = TRUE &
        next(keeper_x) = 2 &
        next(keeper_y) = 2 &
        next(wall[1][1]) = wall[1][1] & next(wall[1][2]) = wall[1][2] & next(wall[1][3]) = wall[1][3] & next(wall[1][4]) = wall[1][4] & next(wall[1][5]) = wall[1][5] & next(wall[2][1]) = wall[2][1] & next(wall[2][2]) = wall[2][2] & next(wall[2][3]) = wall[2][3] & next(wall[2][4]) = wall[2][4] & next(wall[2][5]) = wall[2][5] & next(wall[3][1]) = wall[3][1] & next(wall[3][2]) = wall[3][2] & next(wall[3][3]) = wall[3][3] & next(wall[3][4]) = wall[3][4] & next(wall[3][5]) = wall[3][5] &
        next(goal[1][1]) = goal[1][1] & next(goal[1][2]) = goal[1][2] & next(goal[1][3]) = goal[1][3] & next(goal[1][4]) = goal[1][4] & next(goal[1][5]) = goal[1][5] & next(goal[2][1]) = goal[2][1] & next(goal[2][2]) = goal[2][2] & next(goal[2][3]) = goal[2][3] & next(goal[2][4]) = goal[2][4] & next(goal[2][5]) = goal[2][5] & next(goal[3][1]) = goal[3][1] & next(goal[3][2]) = goal[3][2] & next(goal[3][3]) = goal[3][3] & next(goal[3][4]) = goal[3][4] & next(goal[3][5]) = goal[3][5] &
        next(box_positions[1][1][1]) = box_positions[1][1][1] & next(box_positions[1][1][3]) = box_positions[1][1][3] & next(box_positions[1][1][4]) = box_positions[1][1][4] & next(box_positions[1][1][5]) = box_positions[1][1][5] & next(box_positions[1][2][1]) = box_positions[1][2][1] & next(box_positions[1][2][3]) = box_positions[1][2][3] & next(box_positions[1][2][4]) = box_positions[1][2][4] & next(box_positions[1][2][5]) = box_positions[1][2][5] & next(box_positions[1][3][1]) = box_positions[1][3][1] & next(box_positions[1][3][2]) = box_positions[1][3][2] & next(box_positions[1][3][3]) = box_positions[1][3][3] & next(box_positions[1][3][4]) = box_positions[1][3][4] & next(box_positions[1][3][5]) = box_positions[1][3][5];
        

    -- ** Handling box movements when keeper pushes box[1] left from position (3,3)**
    keeper_x = 3 & !wall[2][3] & !wall[1][3] & 
    box_positions[1][2][3] & !goal[2][3]  
     : 
        next(box_positions[1][2][3]) = FALSE &
        next(box_positions[1][1][3]) = TRUE &
        next(keeper_x) = 2 &
        next(keeper_y) = 3 &
        next(wall[1][1]) = wall[1][1] & next(wall[1][2]) = wall[1][2] & next(wall[1][3]) = wall[1][3] & next(wall[1][4]) = wall[1][4] & next(wall[1][5]) = wall[1][5] & next(wall[2][1]) = wall[2][1] & next(wall[2][2]) = wall[2][2] & next(wall[2][3]) = wall[2][3] & next(wall[2][4]) = wall[2][4] & next(wall[2][5]) = wall[2][5] & next(wall[3][1]) = wall[3][1] & next(wall[3][2]) = wall[3][2] & next(wall[3][3]) = wall[3][3] & next(wall[3][4]) = wall[3][4] & next(wall[3][5]) = wall[3][5] &
        next(goal[1][1]) = goal[1][1] & next(goal[1][2]) = goal[1][2] & next(goal[1][3]) = goal[1][3] & next(goal[1][4]) = goal[1][4] & next(goal[1][5]) = goal[1][5] & next(goal[2][1]) = goal[2][1] & next(goal[2][2]) = goal[2][2] & next(goal[2][3]) = goal[2][3] & next(goal[2][4]) = goal[2][4] & next(goal[2][5]) = goal[2][5] & next(goal[3][1]) = goal[3][1] & next(goal[3][2]) = goal[3][2] & next(goal[3][3]) = goal[3][3] & next(goal[3][4]) = goal[3][4] & next(goal[3][5]) = goal[3][5] &
        next(box_positions[1][1][1]) = box_positions[1][1][1] & next(box_positions[1][1][2]) = box_positions[1][1][2] & next(box_positions[1][1][4]) = box_positions[1][1][4] & next(box_positions[1][1][5]) = box_positions[1][1][5] & next(box_positions[1][2][1]) = box_positions[1][2][1] & next(box_positions[1][2][2]) = box_positions[1][2][2] & next(box_positions[1][2][4]) = box_positions[1][2][4] & next(box_positions[1][2][5]) = box_positions[1][2][5] & next(box_positions[1][3][1]) = box_positions[1][3][1] & next(box_positions[1][3][2]) = box_positions[1][3][2] & next(box_positions[1][3][3]) = box_positions[1][3][3] & next(box_positions[1][3][4]) = box_positions[1][3][4] & next(box_positions[1][3][5]) = box_positions[1][3][5];
        

    -- ** Handling box movements when keeper pushes box[1] left from position (3,4)**
    keeper_x = 3 & !wall[2][4] & !wall[1][4] & 
    box_positions[1][2][4] & !goal[2][4]  
     : 
        next(box_positions[1][2][4]) = FALSE &
        next(box_positions[1][1][4]) = TRUE &
        next(keeper_x) = 2 &
        next(keeper_y) = 4 &
        next(wall[1][1]) = wall[1][1] & next(wall[1][2]) = wall[1][2] & next(wall[1][3]) = wall[1][3] & next(wall[1][4]) = wall[1][4] & next(wall[1][5]) = wall[1][5] & next(wall[2][1]) = wall[2][1] & next(wall[2][2]) = wall[2][2] & next(wall[2][3]) = wall[2][3] & next(wall[2][4]) = wall[2][4] & next(wall[2][5]) = wall[2][5] & next(wall[3][1]) = wall[3][1] & next(wall[3][2]) = wall[3][2] & next(wall[3][3]) = wall[3][3] & next(wall[3][4]) = wall[3][4] & next(wall[3][5]) = wall[3][5] &
        next(goal[1][1]) = goal[1][1] & next(goal[1][2]) = goal[1][2] & next(goal[1][3]) = goal[1][3] & next(goal[1][4]) = goal[1][4] & next(goal[1][5]) = goal[1][5] & next(goal[2][1]) = goal[2][1] & next(goal[2][2]) = goal[2][2] & next(goal[2][3]) = goal[2][3] & next(goal[2][4]) = goal[2][4] & next(goal[2][5]) = goal[2][5] & next(goal[3][1]) = goal[3][1] & next(goal[3][2]) = goal[3][2] & next(goal[3][3]) = goal[3][3] & next(goal[3][4]) = goal[3][4] & next(goal[3][5]) = goal[3][5] &
        next(box_positions[1][1][1]) = box_positions[1][1][1] & next(box_positions[1][1][2]) = box_positions[1][1][2] & next(box_positions[1][1][3]) = box_positions[1][1][3] & next(box_positions[1][1][5]) = box_positions[1][1][5] & next(box_positions[1][2][1]) = box_positions[1][2][1] & next(box_positions[1][2][2]) = box_positions[1][2][2] & next(box_positions[1][2][3]) = box_positions[1][2][3] & next(box_positions[1][2][5]) = box_positions[1][2][5] & next(box_positions[1][3][1]) = box_positions[1][3][1] & next(box_positions[1][3][2]) = box_positions[1][3][2] & next(box_positions[1][3][3]) = box_positions[1][3][3] & next(box_positions[1][3][4]) = box_positions[1][3][4] & next(box_positions[1][3][5]) = box_positions[1][3][5];
        

    -- ** Handling box movements when keeper pushes box[1] left from position (3,5)**
    keeper_x = 3 & !wall[2][5] & !wall[1][5] & 
    box_positions[1][2][5] & !goal[2][5]  
     : 
        next(box_positions[1][2][5]) = FALSE &
        next(box_positions[1][1][5]) = TRUE &
        next(keeper_x) = 2 &
        next(keeper_y) = 5 &
        next(wall[1][1]) = wall[1][1] & next(wall[1][2]) = wall[1][2] & next(wall[1][3]) = wall[1][3] & next(wall[1][4]) = wall[1][4] & next(wall[1][5]) = wall[1][5] & next(wall[2][1]) = wall[2][1] & next(wall[2][2]) = wall[2][2] & next(wall[2][3]) = wall[2][3] & next(wall[2][4]) = wall[2][4] & next(wall[2][5]) = wall[2][5] & next(wall[3][1]) = wall[3][1] & next(wall[3][2]) = wall[3][2] & next(wall[3][3]) = wall[3][3] & next(wall[3][4]) = wall[3][4] & next(wall[3][5]) = wall[3][5] &
        next(goal[1][1]) = goal[1][1] & next(goal[1][2]) = goal[1][2] & next(goal[1][3]) = goal[1][3] & next(goal[1][4]) = goal[1][4] & next(goal[1][5]) = goal[1][5] & next(goal[2][1]) = goal[2][1] & next(goal[2][2]) = goal[2][2] & next(goal[2][3]) = goal[2][3] & next(goal[2][4]) = goal[2][4] & next(goal[2][5]) = goal[2][5] & next(goal[3][1]) = goal[3][1] & next(goal[3][2]) = goal[3][2] & next(goal[3][3]) = goal[3][3] & next(goal[3][4]) = goal[3][4] & next(goal[3][5]) = goal[3][5] &
        next(box_positions[1][1][1]) = box_positions[1][1][1] & next(box_positions[1][1][2]) = box_positions[1][1][2] & next(box_positions[1][1][3]) = box_positions[1][1][3] & next(box_positions[1][1][4]) = box_positions[1][1][4] & next(box_positions[1][2][1]) = box_positions[1][2][1] & next(box_positions[1][2][2]) = box_positions[1][2][2] & next(box_positions[1][2][3]) = box_positions[1][2][3] & next(box_positions[1][2][4]) = box_positions[1][2][4] & next(box_positions[1][3][1]) = box_positions[1][3][1] & next(box_positions[1][3][2]) = box_positions[1][3][2] & next(box_positions[1][3][3]) = box_positions[1][3][3] & next(box_positions[1][3][4]) = box_positions[1][3][4] & next(box_positions[1][3][5]) = box_positions[1][3][5];
        

    -- ** Handling box movements when keeper pushes box[1] up from position (1,3)**
    keeper_y = 3 & !wall[1][2] & !wall[1][1] & 
    box_positions[1][1][2] & !goal[1][2]  
     : 
        next(box_positions[1][1][2]) = FALSE &
        next(box_positions[1][1][1]) = TRUE &
        next(keeper_x) = 1 &
        next(keeper_y) = 2 &
        next(wall[1][1]) = wall[1][1] & next(wall[1][2]) = wall[1][2] & next(wall[1][3]) = wall[1][3] & next(wall[1][4]) = wall[1][4] & next(wall[1][5]) = wall[1][5] & next(wall[2][1]) = wall[2][1] & next(wall[2][2]) = wall[2][2] & next(wall[2][3]) = wall[2][3] & next(wall[2][4]) = wall[2][4] & next(wall[2][5]) = wall[2][5] & next(wall[3][1]) = wall[3][1] & next(wall[3][2]) = wall[3][2] & next(wall[3][3]) = wall[3][3] & next(wall[3][4]) = wall[3][4] & next(wall[3][5]) = wall[3][5] &
        next(goal[1][1]) = goal[1][1] & next(goal[1][2]) = goal[1][2] & next(goal[1][3]) = goal[1][3] & next(goal[1][4]) = goal[1][4] & next(goal[1][5]) = goal[1][5] & next(goal[2][1]) = goal[2][1] & next(goal[2][2]) = goal[2][2] & next(goal[2][3]) = goal[2][3] & next(goal[2][4]) = goal[2][4] & next(goal[2][5]) = goal[2][5] & next(goal[3][1]) = goal[3][1] & next(goal[3][2]) = goal[3][2] & next(goal[3][3]) = goal[3][3] & next(goal[3][4]) = goal[3][4] & next(goal[3][5]) = goal[3][5] &
        next(box_positions[1][1][3]) = box_positions[1][1][3] & next(box_positions[1][1][4]) = box_positions[1][1][4] & next(box_positions[1][1][5]) = box_positions[1][1][5] & next(box_positions[1][2][1]) = box_positions[1][2][1] & next(box_positions[1][2][2]) = box_positions[1][2][2] & next(box_positions[1][2][3]) = box_positions[1][2][3] & next(box_positions[1][2][4]) = box_positions[1][2][4] & next(box_positions[1][2][5]) = box_positions[1][2][5] & next(box_positions[1][3][1]) = box_positions[1][3][1] & next(box_positions[1][3][2]) = box_positions[1][3][2] & next(box_positions[1][3][3]) = box_positions[1][3][3] & next(box_positions[1][3][4]) = box_positions[1][3][4] & next(box_positions[1][3][5]) = box_positions[1][3][5];
        

    -- ** Handling box movements when keeper pushes box[1] up from position (2,3)**
    keeper_y = 3 & !wall[2][2] & !wall[2][1] & 
    box_positions[1][2][2] & !goal[2][2]  
     : 
        next(box_positions[1][2][2]) = FALSE &
        next(box_positions[1][2][1]) = TRUE &
        next(keeper_x) = 2 &
        next(keeper_y) = 2 &
        next(wall[1][1]) = wall[1][1] & next(wall[1][2]) = wall[1][2] & next(wall[1][3]) = wall[1][3] & next(wall[1][4]) = wall[1][4] & next(wall[1][5]) = wall[1][5] & next(wall[2][1]) = wall[2][1] & next(wall[2][2]) = wall[2][2] & next(wall[2][3]) = wall[2][3] & next(wall[2][4]) = wall[2][4] & next(wall[2][5]) = wall[2][5] & next(wall[3][1]) = wall[3][1] & next(wall[3][2]) = wall[3][2] & next(wall[3][3]) = wall[3][3] & next(wall[3][4]) = wall[3][4] & next(wall[3][5]) = wall[3][5] &
        next(goal[1][1]) = goal[1][1] & next(goal[1][2]) = goal[1][2] & next(goal[1][3]) = goal[1][3] & next(goal[1][4]) = goal[1][4] & next(goal[1][5]) = goal[1][5] & next(goal[2][1]) = goal[2][1] & next(goal[2][2]) = goal[2][2] & next(goal[2][3]) = goal[2][3] & next(goal[2][4]) = goal[2][4] & next(goal[2][5]) = goal[2][5] & next(goal[3][1]) = goal[3][1] & next(goal[3][2]) = goal[3][2] & next(goal[3][3]) = goal[3][3] & next(goal[3][4]) = goal[3][4] & next(goal[3][5]) = goal[3][5] &
        next(box_positions[1][1][1]) = box_positions[1][1][1] & next(box_positions[1][1][2]) = box_positions[1][1][2] & next(box_positions[1][1][3]) = box_positions[1][1][3] & next(box_positions[1][1][4]) = box_positions[1][1][4] & next(box_positions[1][1][5]) = box_positions[1][1][5] & next(box_positions[1][2][3]) = box_positions[1][2][3] & next(box_positions[1][2][4]) = box_positions[1][2][4] & next(box_positions[1][2][5]) = box_positions[1][2][5] & next(box_positions[1][3][1]) = box_positions[1][3][1] & next(box_positions[1][3][2]) = box_positions[1][3][2] & next(box_positions[1][3][3]) = box_positions[1][3][3] & next(box_positions[1][3][4]) = box_positions[1][3][4] & next(box_positions[1][3][5]) = box_positions[1][3][5];
        

    -- ** Handling box movements when keeper pushes box[1] up from position (3,3)**
    keeper_y = 3 & !wall[3][2] & !wall[3][1] & 
    box_positions[1][3][2] & !goal[3][2]  
     : 
        next(box_positions[1][3][2]) = FALSE &
        next(box_positions[1][3][1]) = TRUE &
        next(keeper_x) = 3 &
        next(keeper_y) = 2 &
        next(wall[1][1]) = wall[1][1] & next(wall[1][2]) = wall[1][2] & next(wall[1][3]) = wall[1][3] & next(wall[1][4]) = wall[1][4] & next(wall[1][5]) = wall[1][5] & next(wall[2][1]) = wall[2][1] & next(wall[2][2]) = wall[2][2] & next(wall[2][3]) = wall[2][3] & next(wall[2][4]) = wall[2][4] & next(wall[2][5]) = wall[2][5] & next(wall[3][1]) = wall[3][1] & next(wall[3][2]) = wall[3][2] & next(wall[3][3]) = wall[3][3] & next(wall[3][4]) = wall[3][4] & next(wall[3][5]) = wall[3][5] &
        next(goal[1][1]) = goal[1][1] & next(goal[1][2]) = goal[1][2] & next(goal[1][3]) = goal[1][3] & next(goal[1][4]) = goal[1][4] & next(goal[1][5]) = goal[1][5] & next(goal[2][1]) = goal[2][1] & next(goal[2][2]) = goal[2][2] & next(goal[2][3]) = goal[2][3] & next(goal[2][4]) = goal[2][4] & next(goal[2][5]) = goal[2][5] & next(goal[3][1]) = goal[3][1] & next(goal[3][2]) = goal[3][2] & next(goal[3][3]) = goal[3][3] & next(goal[3][4]) = goal[3][4] & next(goal[3][5]) = goal[3][5] &
        next(box_positions[1][1][1]) = box_positions[1][1][1] & next(box_positions[1][1][2]) = box_positions[1][1][2] & next(box_positions[1][1][3]) = box_positions[1][1][3] & next(box_positions[1][1][4]) = box_positions[1][1][4] & next(box_positions[1][1][5]) = box_positions[1][1][5] & next(box_positions[1][2][1]) = box_positions[1][2][1] & next(box_positions[1][2][2]) = box_positions[1][2][2] & next(box_positions[1][2][3]) = box_positions[1][2][3] & next(box_positions[1][2][4]) = box_positions[1][2][4] & next(box_positions[1][2][5]) = box_positions[1][2][5] & next(box_positions[1][3][3]) = box_positions[1][3][3] & next(box_positions[1][3][4]) = box_positions[1][3][4] & next(box_positions[1][3][5]) = box_positions[1][3][5];
        

    -- ** Handling box movements when keeper pushes box[1] up from position (1,4)**
    keeper_y = 4 & !wall[1][3] & !wall[1][2] & 
    box_positions[1][1][3] & !goal[1][3]  
     : 
        next(box_positions[1][1][3]) = FALSE &
        next(box_positions[1][1][2]) = TRUE &
        next(keeper_x) = 1 &
        next(keeper_y) = 3 &
        next(wall[1][1]) = wall[1][1] & next(wall[1][2]) = wall[1][2] & next(wall[1][3]) = wall[1][3] & next(wall[1][4]) = wall[1][4] & next(wall[1][5]) = wall[1][5] & next(wall[2][1]) = wall[2][1] & next(wall[2][2]) = wall[2][2] & next(wall[2][3]) = wall[2][3] & next(wall[2][4]) = wall[2][4] & next(wall[2][5]) = wall[2][5] & next(wall[3][1]) = wall[3][1] & next(wall[3][2]) = wall[3][2] & next(wall[3][3]) = wall[3][3] & next(wall[3][4]) = wall[3][4] & next(wall[3][5]) = wall[3][5] &
        next(goal[1][1]) = goal[1][1] & next(goal[1][2]) = goal[1][2] & next(goal[1][3]) = goal[1][3] & next(goal[1][4]) = goal[1][4] & next(goal[1][5]) = goal[1][5] & next(goal[2][1]) = goal[2][1] & next(goal[2][2]) = goal[2][2] & next(goal[2][3]) = goal[2][3] & next(goal[2][4]) = goal[2][4] & next(goal[2][5]) = goal[2][5] & next(goal[3][1]) = goal[3][1] & next(goal[3][2]) = goal[3][2] & next(goal[3][3]) = goal[3][3] & next(goal[3][4]) = goal[3][4] & next(goal[3][5]) = goal[3][5] &
        next(box_positions[1][1][1]) = box_positions[1][1][1] & next(box_positions[1][1][4]) = box_positions[1][1][4] & next(box_positions[1][1][5]) = box_positions[1][1][5] & next(box_positions[1][2][1]) = box_positions[1][2][1] & next(box_positions[1][2][2]) = box_positions[1][2][2] & next(box_positions[1][2][3]) = box_positions[1][2][3] & next(box_positions[1][2][4]) = box_positions[1][2][4] & next(box_positions[1][2][5]) = box_positions[1][2][5] & next(box_positions[1][3][1]) = box_positions[1][3][1] & next(box_positions[1][3][2]) = box_positions[1][3][2] & next(box_positions[1][3][3]) = box_positions[1][3][3] & next(box_positions[1][3][4]) = box_positions[1][3][4] & next(box_positions[1][3][5]) = box_positions[1][3][5];
        

    -- ** Handling box movements when keeper pushes box[1] up from position (2,4)**
    keeper_y = 4 & !wall[2][3] & !wall[2][2] & 
    box_positions[1][2][3] & !goal[2][3]  
     : 
        next(box_positions[1][2][3]) = FALSE &
        next(box_positions[1][2][2]) = TRUE &
        next(keeper_x) = 2 &
        next(keeper_y) = 3 &
        next(wall[1][1]) = wall[1][1] & next(wall[1][2]) = wall[1][2] & next(wall[1][3]) = wall[1][3] & next(wall[1][4]) = wall[1][4] & next(wall[1][5]) = wall[1][5] & next(wall[2][1]) = wall[2][1] & next(wall[2][2]) = wall[2][2] & next(wall[2][3]) = wall[2][3] & next(wall[2][4]) = wall[2][4] & next(wall[2][5]) = wall[2][5] & next(wall[3][1]) = wall[3][1] & next(wall[3][2]) = wall[3][2] & next(wall[3][3]) = wall[3][3] & next(wall[3][4]) = wall[3][4] & next(wall[3][5]) = wall[3][5] &
        next(goal[1][1]) = goal[1][1] & next(goal[1][2]) = goal[1][2] & next(goal[1][3]) = goal[1][3] & next(goal[1][4]) = goal[1][4] & next(goal[1][5]) = goal[1][5] & next(goal[2][1]) = goal[2][1] & next(goal[2][2]) = goal[2][2] & next(goal[2][3]) = goal[2][3] & next(goal[2][4]) = goal[2][4] & next(goal[2][5]) = goal[2][5] & next(goal[3][1]) = goal[3][1] & next(goal[3][2]) = goal[3][2] & next(goal[3][3]) = goal[3][3] & next(goal[3][4]) = goal[3][4] & next(goal[3][5]) = goal[3][5] &
        next(box_positions[1][1][1]) = box_positions[1][1][1] & next(box_positions[1][1][2]) = box_positions[1][1][2] & next(box_positions[1][1][3]) = box_positions[1][1][3] & next(box_positions[1][1][4]) = box_positions[1][1][4] & next(box_positions[1][1][5]) = box_positions[1][1][5] & next(box_positions[1][2][1]) = box_positions[1][2][1] & next(box_positions[1][2][4]) = box_positions[1][2][4] & next(box_positions[1][2][5]) = box_positions[1][2][5] & next(box_positions[1][3][1]) = box_positions[1][3][1] & next(box_positions[1][3][2]) = box_positions[1][3][2] & next(box_positions[1][3][3]) = box_positions[1][3][3] & next(box_positions[1][3][4]) = box_positions[1][3][4] & next(box_positions[1][3][5]) = box_positions[1][3][5];
        

    -- ** Handling box movements when keeper pushes box[1] up from position (3,4)**
    keeper_y = 4 & !wall[3][3] & !wall[3][2] & 
    box_positions[1][3][3] & !goal[3][3]  
     : 
        next(box_positions[1][3][3]) = FALSE &
        next(box_positions[1][3][2]) = TRUE &
        next(keeper_x) = 3 &
        next(keeper_y) = 3 &
        next(wall[1][1]) = wall[1][1] & next(wall[1][2]) = wall[1][2] & next(wall[1][3]) = wall[1][3] & next(wall[1][4]) = wall[1][4] & next(wall[1][5]) = wall[1][5] & next(wall[2][1]) = wall[2][1] & next(wall[2][2]) = wall[2][2] & next(wall[2][3]) = wall[2][3] & next(wall[2][4]) = wall[2][4] & next(wall[2][5]) = wall[2][5] & next(wall[3][1]) = wall[3][1] & next(wall[3][2]) = wall[3][2] & next(wall[3][3]) = wall[3][3] & next(wall[3][4]) = wall[3][4] & next(wall[3][5]) = wall[3][5] &
        next(goal[1][1]) = goal[1][1] & next(goal[1][2]) = goal[1][2] & next(goal[1][3]) = goal[1][3] & next(goal[1][4]) = goal[1][4] & next(goal[1][5]) = goal[1][5] & next(goal[2][1]) = goal[2][1] & next(goal[2][2]) = goal[2][2] & next(goal[2][3]) = goal[2][3] & next(goal[2][4]) = goal[2][4] & next(goal[2][5]) = goal[2][5] & next(goal[3][1]) = goal[3][1] & next(goal[3][2]) = goal[3][2] & next(goal[3][3]) = goal[3][3] & next(goal[3][4]) = goal[3][4] & next(goal[3][5]) = goal[3][5] &
        next(box_positions[1][1][1]) = box_positions[1][1][1] & next(box_positions[1][1][2]) = box_positions[1][1][2] & next(box_positions[1][1][3]) = box_positions[1][1][3] & next(box_positions[1][1][4]) = box_positions[1][1][4] & next(box_positions[1][1][5]) = box_positions[1][1][5] & next(box_positions[1][2][1]) = box_positions[1][2][1] & next(box_positions[1][2][2]) = box_positions[1][2][2] & next(box_positions[1][2][3]) = box_positions[1][2][3] & next(box_positions[1][2][4]) = box_positions[1][2][4] & next(box_positions[1][2][5]) = box_positions[1][2][5] & next(box_positions[1][3][1]) = box_positions[1][3][1] & next(box_positions[1][3][4]) = box_positions[1][3][4] & next(box_positions[1][3][5]) = box_positions[1][3][5];
        

    -- ** Handling box movements when keeper pushes box[1] up from position (1,5)**
    keeper_y = 5 & !wall[1][4] & !wall[1][3] & 
    box_positions[1][1][4] & !goal[1][4]  
     : 
        next(box_positions[1][1][4]) = FALSE &
        next(box_positions[1][1][3]) = TRUE &
        next(keeper_x) = 1 &
        next(keeper_y) = 4 &
        next(wall[1][1]) = wall[1][1] & next(wall[1][2]) = wall[1][2] & next(wall[1][3]) = wall[1][3] & next(wall[1][4]) = wall[1][4] & next(wall[1][5]) = wall[1][5] & next(wall[2][1]) = wall[2][1] & next(wall[2][2]) = wall[2][2] & next(wall[2][3]) = wall[2][3] & next(wall[2][4]) = wall[2][4] & next(wall[2][5]) = wall[2][5] & next(wall[3][1]) = wall[3][1] & next(wall[3][2]) = wall[3][2] & next(wall[3][3]) = wall[3][3] & next(wall[3][4]) = wall[3][4] & next(wall[3][5]) = wall[3][5] &
        next(goal[1][1]) = goal[1][1] & next(goal[1][2]) = goal[1][2] & next(goal[1][3]) = goal[1][3] & next(goal[1][4]) = goal[1][4] & next(goal[1][5]) = goal[1][5] & next(goal[2][1]) = goal[2][1] & next(goal[2][2]) = goal[2][2] & next(goal[2][3]) = goal[2][3] & next(goal[2][4]) = goal[2][4] & next(goal[2][5]) = goal[2][5] & next(goal[3][1]) = goal[3][1] & next(goal[3][2]) = goal[3][2] & next(goal[3][3]) = goal[3][3] & next(goal[3][4]) = goal[3][4] & next(goal[3][5]) = goal[3][5] &
        next(box_positions[1][1][1]) = box_positions[1][1][1] & next(box_positions[1][1][2]) = box_positions[1][1][2] & next(box_positions[1][1][5]) = box_positions[1][1][5] & next(box_positions[1][2][1]) = box_positions[1][2][1] & next(box_positions[1][2][2]) = box_positions[1][2][2] & next(box_positions[1][2][3]) = box_positions[1][2][3] & next(box_positions[1][2][4]) = box_positions[1][2][4] & next(box_positions[1][2][5]) = box_positions[1][2][5] & next(box_positions[1][3][1]) = box_positions[1][3][1] & next(box_positions[1][3][2]) = box_positions[1][3][2] & next(box_positions[1][3][3]) = box_positions[1][3][3] & next(box_positions[1][3][4]) = box_positions[1][3][4] & next(box_positions[1][3][5]) = box_positions[1][3][5];
        

    -- ** Handling box movements when keeper pushes box[1] up from position (2,5)**
    keeper_y = 5 & !wall[2][4] & !wall[2][3] & 
    box_positions[1][2][4] & !goal[2][4]  
     : 
        next(box_positions[1][2][4]) = FALSE &
        next(box_positions[1][2][3]) = TRUE &
        next(keeper_x) = 2 &
        next(keeper_y) = 4 &
        next(wall[1][1]) = wall[1][1] & next(wall[1][2]) = wall[1][2] & next(wall[1][3]) = wall[1][3] & next(wall[1][4]) = wall[1][4] & next(wall[1][5]) = wall[1][5] & next(wall[2][1]) = wall[2][1] & next(wall[2][2]) = wall[2][2] & next(wall[2][3]) = wall[2][3] & next(wall[2][4]) = wall[2][4] & next(wall[2][5]) = wall[2][5] & next(wall[3][1]) = wall[3][1] & next(wall[3][2]) = wall[3][2] & next(wall[3][3]) = wall[3][3] & next(wall[3][4]) = wall[3][4] & next(wall[3][5]) = wall[3][5] &
        next(goal[1][1]) = goal[1][1] & next(goal[1][2]) = goal[1][2] & next(goal[1][3]) = goal[1][3] & next(goal[1][4]) = goal[1][4] & next(goal[1][5]) = goal[1][5] & next(goal[2][1]) = goal[2][1] & next(goal[2][2]) = goal[2][2] & next(goal[2][3]) = goal[2][3] & next(goal[2][4]) = goal[2][4] & next(goal[2][5]) = goal[2][5] & next(goal[3][1]) = goal[3][1] & next(goal[3][2]) = goal[3][2] & next(goal[3][3]) = goal[3][3] & next(goal[3][4]) = goal[3][4] & next(goal[3][5]) = goal[3][5] &
        next(box_positions[1][1][1]) = box_positions[1][1][1] & next(box_positions[1][1][2]) = box_positions[1][1][2] & next(box_positions[1][1][3]) = box_positions[1][1][3] & next(box_positions[1][1][4]) = box_positions[1][1][4] & next(box_positions[1][1][5]) = box_positions[1][1][5] & next(box_positions[1][2][1]) = box_positions[1][2][1] & next(box_positions[1][2][2]) = box_positions[1][2][2] & next(box_positions[1][2][5]) = box_positions[1][2][5] & next(box_positions[1][3][1]) = box_positions[1][3][1] & next(box_positions[1][3][2]) = box_positions[1][3][2] & next(box_positions[1][3][3]) = box_positions[1][3][3] & next(box_positions[1][3][4]) = box_positions[1][3][4] & next(box_positions[1][3][5]) = box_positions[1][3][5];
        

    -- ** Handling box movements when keeper pushes box[1] up from position (3,5)**
    keeper_y = 5 & !wall[3][4] & !wall[3][3] & 
    box_positions[1][3][4] & !goal[3][4]  
     : 
        next(box_positions[1][3][4]) = FALSE &
        next(box_positions[1][3][3]) = TRUE &
        next(keeper_x) = 3 &
        next(keeper_y) = 4 &
        next(wall[1][1]) = wall[1][1] & next(wall[1][2]) = wall[1][2] & next(wall[1][3]) = wall[1][3] & next(wall[1][4]) = wall[1][4] & next(wall[1][5]) = wall[1][5] & next(wall[2][1]) = wall[2][1] & next(wall[2][2]) = wall[2][2] & next(wall[2][3]) = wall[2][3] & next(wall[2][4]) = wall[2][4] & next(wall[2][5]) = wall[2][5] & next(wall[3][1]) = wall[3][1] & next(wall[3][2]) = wall[3][2] & next(wall[3][3]) = wall[3][3] & next(wall[3][4]) = wall[3][4] & next(wall[3][5]) = wall[3][5] &
        next(goal[1][1]) = goal[1][1] & next(goal[1][2]) = goal[1][2] & next(goal[1][3]) = goal[1][3] & next(goal[1][4]) = goal[1][4] & next(goal[1][5]) = goal[1][5] & next(goal[2][1]) = goal[2][1] & next(goal[2][2]) = goal[2][2] & next(goal[2][3]) = goal[2][3] & next(goal[2][4]) = goal[2][4] & next(goal[2][5]) = goal[2][5] & next(goal[3][1]) = goal[3][1] & next(goal[3][2]) = goal[3][2] & next(goal[3][3]) = goal[3][3] & next(goal[3][4]) = goal[3][4] & next(goal[3][5]) = goal[3][5] &
        next(box_positions[1][1][1]) = box_positions[1][1][1] & next(box_positions[1][1][2]) = box_positions[1][1][2] & next(box_positions[1][1][3]) = box_positions[1][1][3] & next(box_positions[1][1][4]) = box_positions[1][1][4] & next(box_positions[1][1][5]) = box_positions[1][1][5] & next(box_positions[1][2][1]) = box_positions[1][2][1] & next(box_positions[1][2][2]) = box_positions[1][2][2] & next(box_positions[1][2][3]) = box_positions[1][2][3] & next(box_positions[1][2][4]) = box_positions[1][2][4] & next(box_positions[1][2][5]) = box_positions[1][2][5] & next(box_positions[1][3][1]) = box_positions[1][3][1] & next(box_positions[1][3][2]) = box_positions[1][3][2] & next(box_positions[1][3][5]) = box_positions[1][3][5];
        

    -- ** Handling box movements when keeper pushes box[1] down from position (1,1)**
    keeper_y = 1 & !wall[1][2] & !wall[1][3] & 
    box_positions[1][1][2] & !goal[1][2]  
     : 
        next(box_positions[1][1][2]) = FALSE &
        next(box_positions[1][1][3]) = TRUE &
        next(keeper_x) = 1 &
        next(keeper_y) = 2 &
        next(wall[1][1]) = wall[1][1] & next(wall[1][2]) = wall[1][2] & next(wall[1][3]) = wall[1][3] & next(wall[1][4]) = wall[1][4] & next(wall[1][5]) = wall[1][5] & next(wall[2][1]) = wall[2][1] & next(wall[2][2]) = wall[2][2] & next(wall[2][3]) = wall[2][3] & next(wall[2][4]) = wall[2][4] & next(wall[2][5]) = wall[2][5] & next(wall[3][1]) = wall[3][1] & next(wall[3][2]) = wall[3][2] & next(wall[3][3]) = wall[3][3] & next(wall[3][4]) = wall[3][4] & next(wall[3][5]) = wall[3][5] &
        next(goal[1][1]) = goal[1][1] & next(goal[1][2]) = goal[1][2] & next(goal[1][3]) = goal[1][3] & next(goal[1][4]) = goal[1][4] & next(goal[1][5]) = goal[1][5] & next(goal[2][1]) = goal[2][1] & next(goal[2][2]) = goal[2][2] & next(goal[2][3]) = goal[2][3] & next(goal[2][4]) = goal[2][4] & next(goal[2][5]) = goal[2][5] & next(goal[3][1]) = goal[3][1] & next(goal[3][2]) = goal[3][2] & next(goal[3][3]) = goal[3][3] & next(goal[3][4]) = goal[3][4] & next(goal[3][5]) = goal[3][5] &
        next(box_positions[1][1][1]) = box_positions[1][1][1] & next(box_positions[1][1][4]) = box_positions[1][1][4] & next(box_positions[1][1][5]) = box_positions[1][1][5] & next(box_positions[1][2][1]) = box_positions[1][2][1] & next(box_positions[1][2][2]) = box_positions[1][2][2] & next(box_positions[1][2][3]) = box_positions[1][2][3] & next(box_positions[1][2][4]) = box_positions[1][2][4] & next(box_positions[1][2][5]) = box_positions[1][2][5] & next(box_positions[1][3][1]) = box_positions[1][3][1] & next(box_positions[1][3][2]) = box_positions[1][3][2] & next(box_positions[1][3][3]) = box_positions[1][3][3] & next(box_positions[1][3][4]) = box_positions[1][3][4] & next(box_positions[1][3][5]) = box_positions[1][3][5];
        

    -- ** Handling box movements when keeper pushes box[1] down from position (2,1)**
    keeper_y = 1 & !wall[2][2] & !wall[2][3] & 
    box_positions[1][2][2] & !goal[2][2]  
     : 
        next(box_positions[1][2][2]) = FALSE &
        next(box_positions[1][2][3]) = TRUE &
        next(keeper_x) = 2 &
        next(keeper_y) = 2 &
        next(wall[1][1]) = wall[1][1] & next(wall[1][2]) = wall[1][2] & next(wall[1][3]) = wall[1][3] & next(wall[1][4]) = wall[1][4] & next(wall[1][5]) = wall[1][5] & next(wall[2][1]) = wall[2][1] & next(wall[2][2]) = wall[2][2] & next(wall[2][3]) = wall[2][3] & next(wall[2][4]) = wall[2][4] & next(wall[2][5]) = wall[2][5] & next(wall[3][1]) = wall[3][1] & next(wall[3][2]) = wall[3][2] & next(wall[3][3]) = wall[3][3] & next(wall[3][4]) = wall[3][4] & next(wall[3][5]) = wall[3][5] &
        next(goal[1][1]) = goal[1][1] & next(goal[1][2]) = goal[1][2] & next(goal[1][3]) = goal[1][3] & next(goal[1][4]) = goal[1][4] & next(goal[1][5]) = goal[1][5] & next(goal[2][1]) = goal[2][1] & next(goal[2][2]) = goal[2][2] & next(goal[2][3]) = goal[2][3] & next(goal[2][4]) = goal[2][4] & next(goal[2][5]) = goal[2][5] & next(goal[3][1]) = goal[3][1] & next(goal[3][2]) = goal[3][2] & next(goal[3][3]) = goal[3][3] & next(goal[3][4]) = goal[3][4] & next(goal[3][5]) = goal[3][5] &
        next(box_positions[1][1][1]) = box_positions[1][1][1] & next(box_positions[1][1][2]) = box_positions[1][1][2] & next(box_positions[1][1][3]) = box_positions[1][1][3] & next(box_positions[1][1][4]) = box_positions[1][1][4] & next(box_positions[1][1][5]) = box_positions[1][1][5] & next(box_positions[1][2][1]) = box_positions[1][2][1] & next(box_positions[1][2][4]) = box_positions[1][2][4] & next(box_positions[1][2][5]) = box_positions[1][2][5] & next(box_positions[1][3][1]) = box_positions[1][3][1] & next(box_positions[1][3][2]) = box_positions[1][3][2] & next(box_positions[1][3][3]) = box_positions[1][3][3] & next(box_positions[1][3][4]) = box_positions[1][3][4] & next(box_positions[1][3][5]) = box_positions[1][3][5];
        

    -- ** Handling box movements when keeper pushes box[1] down from position (3,1)**
    keeper_y = 1 & !wall[3][2] & !wall[3][3] & 
    box_positions[1][3][2] & !goal[3][2]  
     : 
        next(box_positions[1][3][2]) = FALSE &
        next(box_positions[1][3][3]) = TRUE &
        next(keeper_x) = 3 &
        next(keeper_y) = 2 &
        next(wall[1][1]) = wall[1][1] & next(wall[1][2]) = wall[1][2] & next(wall[1][3]) = wall[1][3] & next(wall[1][4]) = wall[1][4] & next(wall[1][5]) = wall[1][5] & next(wall[2][1]) = wall[2][1] & next(wall[2][2]) = wall[2][2] & next(wall[2][3]) = wall[2][3] & next(wall[2][4]) = wall[2][4] & next(wall[2][5]) = wall[2][5] & next(wall[3][1]) = wall[3][1] & next(wall[3][2]) = wall[3][2] & next(wall[3][3]) = wall[3][3] & next(wall[3][4]) = wall[3][4] & next(wall[3][5]) = wall[3][5] &
        next(goal[1][1]) = goal[1][1] & next(goal[1][2]) = goal[1][2] & next(goal[1][3]) = goal[1][3] & next(goal[1][4]) = goal[1][4] & next(goal[1][5]) = goal[1][5] & next(goal[2][1]) = goal[2][1] & next(goal[2][2]) = goal[2][2] & next(goal[2][3]) = goal[2][3] & next(goal[2][4]) = goal[2][4] & next(goal[2][5]) = goal[2][5] & next(goal[3][1]) = goal[3][1] & next(goal[3][2]) = goal[3][2] & next(goal[3][3]) = goal[3][3] & next(goal[3][4]) = goal[3][4] & next(goal[3][5]) = goal[3][5] &
        next(box_positions[1][1][1]) = box_positions[1][1][1] & next(box_positions[1][1][2]) = box_positions[1][1][2] & next(box_positions[1][1][3]) = box_positions[1][1][3] & next(box_positions[1][1][4]) = box_positions[1][1][4] & next(box_positions[1][1][5]) = box_positions[1][1][5] & next(box_positions[1][2][1]) = box_positions[1][2][1] & next(box_positions[1][2][2]) = box_positions[1][2][2] & next(box_positions[1][2][3]) = box_positions[1][2][3] & next(box_positions[1][2][4]) = box_positions[1][2][4] & next(box_positions[1][2][5]) = box_positions[1][2][5] & next(box_positions[1][3][1]) = box_positions[1][3][1] & next(box_positions[1][3][4]) = box_positions[1][3][4] & next(box_positions[1][3][5]) = box_positions[1][3][5];
        

    -- ** Handling box movements when keeper pushes box[1] down from position (1,2)**
    keeper_y = 2 & !wall[1][3] & !wall[1][4] & 
    box_positions[1][1][3] & !goal[1][3]  
     : 
        next(box_positions[1][1][3]) = FALSE &
        next(box_positions[1][1][4]) = TRUE &
        next(keeper_x) = 1 &
        next(keeper_y) = 3 &
        next(wall[1][1]) = wall[1][1] & next(wall[1][2]) = wall[1][2] & next(wall[1][3]) = wall[1][3] & next(wall[1][4]) = wall[1][4] & next(wall[1][5]) = wall[1][5] & next(wall[2][1]) = wall[2][1] & next(wall[2][2]) = wall[2][2] & next(wall[2][3]) = wall[2][3] & next(wall[2][4]) = wall[2][4] & next(wall[2][5]) = wall[2][5] & next(wall[3][1]) = wall[3][1] & next(wall[3][2]) = wall[3][2] & next(wall[3][3]) = wall[3][3] & next(wall[3][4]) = wall[3][4] & next(wall[3][5]) = wall[3][5] &
        next(goal[1][1]) = goal[1][1] & next(goal[1][2]) = goal[1][2] & next(goal[1][3]) = goal[1][3] & next(goal[1][4]) = goal[1][4] & next(goal[1][5]) = goal[1][5] & next(goal[2][1]) = goal[2][1] & next(goal[2][2]) = goal[2][2] & next(goal[2][3]) = goal[2][3] & next(goal[2][4]) = goal[2][4] & next(goal[2][5]) = goal[2][5] & next(goal[3][1]) = goal[3][1] & next(goal[3][2]) = goal[3][2] & next(goal[3][3]) = goal[3][3] & next(goal[3][4]) = goal[3][4] & next(goal[3][5]) = goal[3][5] &
        next(box_positions[1][1][1]) = box_positions[1][1][1] & next(box_positions[1][1][2]) = box_positions[1][1][2] & next(box_positions[1][1][5]) = box_positions[1][1][5] & next(box_positions[1][2][1]) = box_positions[1][2][1] & next(box_positions[1][2][2]) = box_positions[1][2][2] & next(box_positions[1][2][3]) = box_positions[1][2][3] & next(box_positions[1][2][4]) = box_positions[1][2][4] & next(box_positions[1][2][5]) = box_positions[1][2][5] & next(box_positions[1][3][1]) = box_positions[1][3][1] & next(box_positions[1][3][2]) = box_positions[1][3][2] & next(box_positions[1][3][3]) = box_positions[1][3][3] & next(box_positions[1][3][4]) = box_positions[1][3][4] & next(box_positions[1][3][5]) = box_positions[1][3][5];
        

    -- ** Handling box movements when keeper pushes box[1] down from position (2,2)**
    keeper_y = 2 & !wall[2][3] & !wall[2][4] & 
    box_positions[1][2][3] & !goal[2][3]  
     : 
        next(box_positions[1][2][3]) = FALSE &
        next(box_positions[1][2][4]) = TRUE &
        next(keeper_x) = 2 &
        next(keeper_y) = 3 &
        next(wall[1][1]) = wall[1][1] & next(wall[1][2]) = wall[1][2] & next(wall[1][3]) = wall[1][3] & next(wall[1][4]) = wall[1][4] & next(wall[1][5]) = wall[1][5] & next(wall[2][1]) = wall[2][1] & next(wall[2][2]) = wall[2][2] & next(wall[2][3]) = wall[2][3] & next(wall[2][4]) = wall[2][4] & next(wall[2][5]) = wall[2][5] & next(wall[3][1]) = wall[3][1] & next(wall[3][2]) = wall[3][2] & next(wall[3][3]) = wall[3][3] & next(wall[3][4]) = wall[3][4] & next(wall[3][5]) = wall[3][5] &
        next(goal[1][1]) = goal[1][1] & next(goal[1][2]) = goal[1][2] & next(goal[1][3]) = goal[1][3] & next(goal[1][4]) = goal[1][4] & next(goal[1][5]) = goal[1][5] & next(goal[2][1]) = goal[2][1] & next(goal[2][2]) = goal[2][2] & next(goal[2][3]) = goal[2][3] & next(goal[2][4]) = goal[2][4] & next(goal[2][5]) = goal[2][5] & next(goal[3][1]) = goal[3][1] & next(goal[3][2]) = goal[3][2] & next(goal[3][3]) = goal[3][3] & next(goal[3][4]) = goal[3][4] & next(goal[3][5]) = goal[3][5] &
        next(box_positions[1][1][1]) = box_positions[1][1][1] & next(box_positions[1][1][2]) = box_positions[1][1][2] & next(box_positions[1][1][3]) = box_positions[1][1][3] & next(box_positions[1][1][4]) = box_positions[1][1][4] & next(box_positions[1][1][5]) = box_positions[1][1][5] & next(box_positions[1][2][1]) = box_positions[1][2][1] & next(box_positions[1][2][2]) = box_positions[1][2][2] & next(box_positions[1][2][5]) = box_positions[1][2][5] & next(box_positions[1][3][1]) = box_positions[1][3][1] & next(box_positions[1][3][2]) = box_positions[1][3][2] & next(box_positions[1][3][3]) = box_positions[1][3][3] & next(box_positions[1][3][4]) = box_positions[1][3][4] & next(box_positions[1][3][5]) = box_positions[1][3][5];
        

    -- ** Handling box movements when keeper pushes box[1] down from position (3,2)**
    keeper_y = 2 & !wall[3][3] & !wall[3][4] & 
    box_positions[1][3][3] & !goal[3][3]  
     : 
        next(box_positions[1][3][3]) = FALSE &
        next(box_positions[1][3][4]) = TRUE &
        next(keeper_x) = 3 &
        next(keeper_y) = 3 &
        next(wall[1][1]) = wall[1][1] & next(wall[1][2]) = wall[1][2] & next(wall[1][3]) = wall[1][3] & next(wall[1][4]) = wall[1][4] & next(wall[1][5]) = wall[1][5] & next(wall[2][1]) = wall[2][1] & next(wall[2][2]) = wall[2][2] & next(wall[2][3]) = wall[2][3] & next(wall[2][4]) = wall[2][4] & next(wall[2][5]) = wall[2][5] & next(wall[3][1]) = wall[3][1] & next(wall[3][2]) = wall[3][2] & next(wall[3][3]) = wall[3][3] & next(wall[3][4]) = wall[3][4] & next(wall[3][5]) = wall[3][5] &
        next(goal[1][1]) = goal[1][1] & next(goal[1][2]) = goal[1][2] & next(goal[1][3]) = goal[1][3] & next(goal[1][4]) = goal[1][4] & next(goal[1][5]) = goal[1][5] & next(goal[2][1]) = goal[2][1] & next(goal[2][2]) = goal[2][2] & next(goal[2][3]) = goal[2][3] & next(goal[2][4]) = goal[2][4] & next(goal[2][5]) = goal[2][5] & next(goal[3][1]) = goal[3][1] & next(goal[3][2]) = goal[3][2] & next(goal[3][3]) = goal[3][3] & next(goal[3][4]) = goal[3][4] & next(goal[3][5]) = goal[3][5] &
        next(box_positions[1][1][1]) = box_positions[1][1][1] & next(box_positions[1][1][2]) = box_positions[1][1][2] & next(box_positions[1][1][3]) = box_positions[1][1][3] & next(box_positions[1][1][4]) = box_positions[1][1][4] & next(box_positions[1][1][5]) = box_positions[1][1][5] & next(box_positions[1][2][1]) = box_positions[1][2][1] & next(box_positions[1][2][2]) = box_positions[1][2][2] & next(box_positions[1][2][3]) = box_positions[1][2][3] & next(box_positions[1][2][4]) = box_positions[1][2][4] & next(box_positions[1][2][5]) = box_positions[1][2][5] & next(box_positions[1][3][1]) = box_positions[1][3][1] & next(box_positions[1][3][2]) = box_positions[1][3][2] & next(box_positions[1][3][5]) = box_positions[1][3][5];
        

    -- ** Handling box movements when keeper pushes box[1] down from position (1,3)**
    keeper_y = 3 & !wall[1][4] & !wall[1][5] & 
    box_positions[1][1][4] & !goal[1][4]  
     : 
        next(box_positions[1][1][4]) = FALSE &
        next(box_positions[1][1][5]) = TRUE &
        next(keeper_x) = 1 &
        next(keeper_y) = 4 &
        next(wall[1][1]) = wall[1][1] & next(wall[1][2]) = wall[1][2] & next(wall[1][3]) = wall[1][3] & next(wall[1][4]) = wall[1][4] & next(wall[1][5]) = wall[1][5] & next(wall[2][1]) = wall[2][1] & next(wall[2][2]) = wall[2][2] & next(wall[2][3]) = wall[2][3] & next(wall[2][4]) = wall[2][4] & next(wall[2][5]) = wall[2][5] & next(wall[3][1]) = wall[3][1] & next(wall[3][2]) = wall[3][2] & next(wall[3][3]) = wall[3][3] & next(wall[3][4]) = wall[3][4] & next(wall[3][5]) = wall[3][5] &
        next(goal[1][1]) = goal[1][1] & next(goal[1][2]) = goal[1][2] & next(goal[1][3]) = goal[1][3] & next(goal[1][4]) = goal[1][4] & next(goal[1][5]) = goal[1][5] & next(goal[2][1]) = goal[2][1] & next(goal[2][2]) = goal[2][2] & next(goal[2][3]) = goal[2][3] & next(goal[2][4]) = goal[2][4] & next(goal[2][5]) = goal[2][5] & next(goal[3][1]) = goal[3][1] & next(goal[3][2]) = goal[3][2] & next(goal[3][3]) = goal[3][3] & next(goal[3][4]) = goal[3][4] & next(goal[3][5]) = goal[3][5] &
        next(box_positions[1][1][1]) = box_positions[1][1][1] & next(box_positions[1][1][2]) = box_positions[1][1][2] & next(box_positions[1][1][3]) = box_positions[1][1][3] & next(box_positions[1][2][1]) = box_positions[1][2][1] & next(box_positions[1][2][2]) = box_positions[1][2][2] & next(box_positions[1][2][3]) = box_positions[1][2][3] & next(box_positions[1][2][4]) = box_positions[1][2][4] & next(box_positions[1][2][5]) = box_positions[1][2][5] & next(box_positions[1][3][1]) = box_positions[1][3][1] & next(box_positions[1][3][2]) = box_positions[1][3][2] & next(box_positions[1][3][3]) = box_positions[1][3][3] & next(box_positions[1][3][4]) = box_positions[1][3][4] & next(box_positions[1][3][5]) = box_positions[1][3][5];
        

    -- ** Handling box movements when keeper pushes box[1] down from position (2,3)**
    keeper_y = 3 & !wall[2][4] & !wall[2][5] & 
    box_positions[1][2][4] & !goal[2][4]  
     : 
        next(box_positions[1][2][4]) = FALSE &
        next(box_positions[1][2][5]) = TRUE &
        next(keeper_x) = 2 &
        next(keeper_y) = 4 &
        next(wall[1][1]) = wall[1][1] & next(wall[1][2]) = wall[1][2] & next(wall[1][3]) = wall[1][3] & next(wall[1][4]) = wall[1][4] & next(wall[1][5]) = wall[1][5] & next(wall[2][1]) = wall[2][1] & next(wall[2][2]) = wall[2][2] & next(wall[2][3]) = wall[2][3] & next(wall[2][4]) = wall[2][4] & next(wall[2][5]) = wall[2][5] & next(wall[3][1]) = wall[3][1] & next(wall[3][2]) = wall[3][2] & next(wall[3][3]) = wall[3][3] & next(wall[3][4]) = wall[3][4] & next(wall[3][5]) = wall[3][5] &
        next(goal[1][1]) = goal[1][1] & next(goal[1][2]) = goal[1][2] & next(goal[1][3]) = goal[1][3] & next(goal[1][4]) = goal[1][4] & next(goal[1][5]) = goal[1][5] & next(goal[2][1]) = goal[2][1] & next(goal[2][2]) = goal[2][2] & next(goal[2][3]) = goal[2][3] & next(goal[2][4]) = goal[2][4] & next(goal[2][5]) = goal[2][5] & next(goal[3][1]) = goal[3][1] & next(goal[3][2]) = goal[3][2] & next(goal[3][3]) = goal[3][3] & next(goal[3][4]) = goal[3][4] & next(goal[3][5]) = goal[3][5] &
        next(box_positions[1][1][1]) = box_positions[1][1][1] & next(box_positions[1][1][2]) = box_positions[1][1][2] & next(box_positions[1][1][3]) = box_positions[1][1][3] & next(box_positions[1][1][4]) = box_positions[1][1][4] & next(box_positions[1][1][5]) = box_positions[1][1][5] & next(box_positions[1][2][1]) = box_positions[1][2][1] & next(box_positions[1][2][2]) = box_positions[1][2][2] & next(box_positions[1][2][3]) = box_positions[1][2][3] & next(box_positions[1][3][1]) = box_positions[1][3][1] & next(box_positions[1][3][2]) = box_positions[1][3][2] & next(box_positions[1][3][3]) = box_positions[1][3][3] & next(box_positions[1][3][4]) = box_positions[1][3][4] & next(box_positions[1][3][5]) = box_positions[1][3][5];
        

    -- ** Handling box movements when keeper pushes box[1] down from position (3,3)**
    keeper_y = 3 & !wall[3][4] & !wall[3][5] & 
    box_positions[1][3][4] & !goal[3][4]  
     : 
        next(box_positions[1][3][4]) = FALSE &
        next(box_positions[1][3][5]) = TRUE &
        next(keeper_x) = 3 &
        next(keeper_y) = 4 &
        next(wall[1][1]) = wall[1][1] & next(wall[1][2]) = wall[1][2] & next(wall[1][3]) = wall[1][3] & next(wall[1][4]) = wall[1][4] & next(wall[1][5]) = wall[1][5] & next(wall[2][1]) = wall[2][1] & next(wall[2][2]) = wall[2][2] & next(wall[2][3]) = wall[2][3] & next(wall[2][4]) = wall[2][4] & next(wall[2][5]) = wall[2][5] & next(wall[3][1]) = wall[3][1] & next(wall[3][2]) = wall[3][2] & next(wall[3][3]) = wall[3][3] & next(wall[3][4]) = wall[3][4] & next(wall[3][5]) = wall[3][5] &
        next(goal[1][1]) = goal[1][1] & next(goal[1][2]) = goal[1][2] & next(goal[1][3]) = goal[1][3] & next(goal[1][4]) = goal[1][4] & next(goal[1][5]) = goal[1][5] & next(goal[2][1]) = goal[2][1] & next(goal[2][2]) = goal[2][2] & next(goal[2][3]) = goal[2][3] & next(goal[2][4]) = goal[2][4] & next(goal[2][5]) = goal[2][5] & next(goal[3][1]) = goal[3][1] & next(goal[3][2]) = goal[3][2] & next(goal[3][3]) = goal[3][3] & next(goal[3][4]) = goal[3][4] & next(goal[3][5]) = goal[3][5] &
        next(box_positions[1][1][1]) = box_positions[1][1][1] & next(box_positions[1][1][2]) = box_positions[1][1][2] & next(box_positions[1][1][3]) = box_positions[1][1][3] & next(box_positions[1][1][4]) = box_positions[1][1][4] & next(box_positions[1][1][5]) = box_positions[1][1][5] & next(box_positions[1][2][1]) = box_positions[1][2][1] & next(box_positions[1][2][2]) = box_positions[1][2][2] & next(box_positions[1][2][3]) = box_positions[1][2][3] & next(box_positions[1][2][4]) = box_positions[1][2][4] & next(box_positions[1][2][5]) = box_positions[1][2][5] & next(box_positions[1][3][1]) = box_positions[1][3][1] & next(box_positions[1][3][2]) = box_positions[1][3][2] & next(box_positions[1][3][3]) = box_positions[1][3][3];
        

    -- Default: No movement
    TRUE : 
        next(keeper_x) = keeper_x &
        next(keeper_y) = keeper_y &
        next(wall[1][1]) = wall[1][1] & next(wall[1][2]) = wall[1][2] & next(wall[1][3]) = wall[1][3] & next(wall[1][4]) = wall[1][4] & next(wall[1][5]) = wall[1][5] & next(wall[2][1]) = wall[2][1] & next(wall[2][2]) = wall[2][2] & next(wall[2][3]) = wall[2][3] & next(wall[2][4]) = wall[2][4] & next(wall[2][5]) = wall[2][5] & next(wall[3][1]) = wall[3][1] & next(wall[3][2]) = wall[3][2] & next(wall[3][3]) = wall[3][3] & next(wall[3][4]) = wall[3][4] & next(wall[3][5]) = wall[3][5] &
        next(goal[1][1]) = goal[1][1] & next(goal[1][2]) = goal[1][2] & next(goal[1][3]) = goal[1][3] & next(goal[1][4]) = goal[1][4] & next(goal[1][5]) = goal[1][5] & next(goal[2][1]) = goal[2][1] & next(goal[2][2]) = goal[2][2] & next(goal[2][3]) = goal[2][3] & next(goal[2][4]) = goal[2][4] & next(goal[2][5]) = goal[2][5] & next(goal[3][1]) = goal[3][1] & next(goal[3][2]) = goal[3][2] & next(goal[3][3]) = goal[3][3] & next(goal[3][4]) = goal[3][4] & next(goal[3][5]) = goal[3][5] &
        next(box_positions[1][1][1]) = box_positions[1][1][1] & next(box_positions[1][1][2]) = box_positions[1][1][2] & next(box_positions[1][1][3]) = box_positions[1][1][3] & next(box_positions[1][1][4]) = box_positions[1][1][4] & next(box_positions[1][1][5]) = box_positions[1][1][5] & next(box_positions[1][2][1]) = box_positions[1][2][1] & next(box_positions[1][2][2]) = box_positions[1][2][2] & next(box_positions[1][2][3]) = box_positions[1][2][3] & next(box_positions[1][2][4]) = box_positions[1][2][4] & next(box_positions[1][2][5]) = box_positions[1][2][5] & next(box_positions[1][3][1]) = box_positions[1][3][1] & next(box_positions[1][3][2]) = box_positions[1][3][2] & next(box_positions[1][3][3]) = box_positions[1][3][3] & next(box_positions[1][3][4]) = box_positions[1][3][4] & next(box_positions[1][3][5]) = box_positions[1][3][5];
    
esac;

LTLSPEC
    !F (((box_positions[1][2][4] = TRUE)))
